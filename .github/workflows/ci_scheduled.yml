name: Test Notebooks

on:
  workflow_call:
    inputs:
      python-version:
        description: 'Python version to use'
        required: true
        type: string
  workflow_dispatch:
    inputs:
      python-version:
        description: 'Python version to use'
        required: true
        type: string
jobs:
  find-notebooks:
  runs-on: ubuntu-latest
    outputs:
      notebooks: ${{ steps.notebooks.outputs.notebooks }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Find all notebooks
      id: notebooks
      run: |
        notebooks=$(find notebooks/ -type f -name "*.ipynb")
        echo "::set-output name=notebooks::[\"$(echo $notebooks | sed 's/ /", "/g')\"]"

  notebook-execution:
    needs: gather-notebooks
    environment: ci_env
    runs-on: 
      group: ${{ (matrix.notebook == 'notebooks/MIRI/MRS/JWPipeNB-MIRI-MRS.ipynb' || matrix.notebook == 'notebooks/NIRISS/Imaging/JWPipeNB-niriss-imaging.ipynb') && 'jwst-pipeline-notebooks-16gb' || 'jwst-pipeline-notebooks-16gb' }}
    strategy:
        fail-fast: false
        matrix:
            notebooks: ${{ fromJson(needs.find-notebooks.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ inputs.python-version }}
        uses: actions/setup-python@v5 ## needed for caching
        with:
          python-version: ${{ inputs.python-version }}
          cache: 'pip'
          
      - name: Add conda to system path
        run: |
          # $CONDA is an environment variable pointing to the root of the miniconda directory
          echo $CONDA/bin >> $GITHUB_PATH
      - name: Install dependencies
        run: |
          ## Install the local requirements file
          echo DEBUG ---
          pwd ## print working directory
          echo "Path to req's: $(dirname ${{ matrix.notebooks }})/requirements.txt"
          ls $(dirname ${{ matrix.notebooks }})
          echo ---
          if [ -f $(dirname "${{ matrix.notebooks }}")/pre-requirements.sh ]; then
            chmod +x $(dirname "${{ matrix.notebooks }}")/pre-requirements.sh
            ./$(dirname "${{ matrix.notebooks }}")/pre-requirements.sh
          fi
          if [ -f $(dirname "${{ matrix.notebooks }}")/pre-requirements.txt ]; then
            pip install -r $(dirname "${{ matrix.notebooks }}")/pre-requirements.txt
          fi
          if [ -f pre-requirements.txt ]; then
            pip install -r pre-requirements.txt
            echo Found Pre-Reqs
          fi
          pip install -r $(dirname ${{ matrix.notebooks }})/requirements.txt
          pip install pytest
          pip install nbval
          pip install nbconvert
          pip install bandit

      - name: Execute notebooks
        run: |
          export CASJOBS_PW="$CI_CASJOBS_PW"
          export CASJOBS_USERID="$CI_CASJOBS_USERID"
          jupyter nbconvert --template classic --to html --execute "${{ matrix.notebooks }}"
          
      - name: Validate notebooks 
        run: |
         pytest --nbval "${{ matrix.notebooks }}" 

      - name: Scan with Bandit
        run: |
          pip install ipython
          jupyter nbconvert --to script ${{ matrix.notebooks }}
          pyfile=$(echo "${{ matrix.notebooks }}" | sed 's/\.ipynb$/.py/')
          bandit -lll -iii $pyfile
