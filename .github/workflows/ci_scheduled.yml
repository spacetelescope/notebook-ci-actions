name: Scheduled Notebook Execution
on:
  workflow_call:
    inputs:  
      python-version:
        required: true
        type: string
    secrets:
      CASJOBS_USERID:
        description: 'CASJOBS user ID'
        required: false
      CASJOBS_PW:
        description: 'CASJOBS password'
        required: false
env:
  CASJOBS_PW: ${{ secrets.CASJOBS_PW }}
  CASJOBS_USERID: ${{ secrets.CASJOBS_USERID }}
  
permissions: write-all  
jobs:
  gather-notebooks:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3
      - id: set-matrix
        run: echo "matrix=$(find notebooks -name "*.ipynb" | jq -cnR '[inputs | select(length>0)]')" >> $GITHUB_OUTPUT
  scheduled-notebook-execution:
    needs: gather-notebooks
    runs-on: ubuntu-latest
    strategy:
        fail-fast: false
        matrix:
            notebooks: ${{ fromJson(needs.gather-notebooks.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v3

      - name: Set up micromamba and install dependencies
        uses: mamba-org/setup-micromamba@v1
        with:
          environment-name: hstcal-env
          create-args: >-
            python=${{ inputs.python-version }}
            hstcal
            jupyter
            pytest
            nbval
            nbconvert
          channels: conda-forge

      - name: Set up Python ${{ inputs.python-version }}
        uses: astral-sh/setup-uv@v6.0.1
        with:
          version: "0.7.3"
          python-version: ${{ inputs.python-version }}
          enable-cache: true

      - name: Install pip dependencies
        env:
          PYDEVD_DISABLE_FILE_VALIDATION: 1
          SKLEARN_ALLOW_DEPRECATED_SKLEARN_PACKAGE_INSTALL: True
        run: |
          eval "$(micromamba shell hook -s posix)"
          micromamba activate hstcal-env
          echo "Path to req's: $(dirname ${{ matrix.notebooks }})/requirements.txt"
          ls $(dirname ${{ matrix.notebooks }})
          echo ---
          if [ -f $(dirname "${{ matrix.notebooks }}")/pre-installl.sh ]; then
            chmod +x $(dirname "${{ matrix.notebooks }}")/pre-install.sh
            ./$(dirname "${{ matrix.notebooks }}")/pre-install.sh
          fi
          if [ -f $(dirname "${{ matrix.notebooks }}")/pre-requirements.sh ]; then
            chmod +x $(dirname "${{ matrix.notebooks }}")/pre-requirements.sh
            ./$(dirname "${{ matrix.notebooks }}")/pre-requirements.sh
          fi
          if [ -f pre-requirements.txt ]; then
            uv pip install --system -r pre-requirements.txt
          fi
          uv pip install --system -r $(dirname ${{ matrix.notebooks }})/requirements.txt

      - name: Execute notebooks
        run: |
          eval "$(micromamba shell hook -s posix)"
          micromamba activate hstcal-env
          uv run jupyter nbconvert --template classic --to html --execute "${{ matrix.notebooks }}"

      - name: Validate notebooks
        run: |
          eval "$(micromamba shell hook -s posix)"
          micromamba activate hstcal-env
          uv run pytest --nbval "${{ matrix.notebooks }}"
