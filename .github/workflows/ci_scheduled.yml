name: Notebook Execution with Fallback

on:
  workflow_call:
    inputs:
      python-version:
        required: true
        type: string

jobs:
  generate-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - id: set-matrix
        run: echo "matrix=$(find notebooks -name "*.ipynb" | jq -cnR '[inputs | select(length>0)]')" >> $GITHUB_OUTPUT


  run-notebook:
    needs: generate-matrix
    strategy:
        fail-fast: false
        matrix:
            notebooks: ${{ fromJson(needs.generate-matrix.outputs.matrix) }} 
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python ${{ inputs.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ inputs.python-version }}


      - name: Install dependencies
        run: |
          #pip install -r requirements.txt
          if [ -f $(dirname "${{ matrix.notebooks }}")/pre-requirements.sh ]; then
            chmod +x $(dirname "${{ matrix.notebooks }}")/pre-requirements.sh
            ./$(dirname "${{ matrix.notebooks }}")/pre-requirements.sh
          fi
          if [ -f $(dirname "${{ matrix.notebooks }}")/pre-requirements.txt ]; then
            pip install -r $(dirname "${{ matrix.notebooks }}")/pre-requirements.txt
          fi
          pip install -r $(dirname "${{ matrix.notebooks }}")/requirements.txt
          pip install pytest
          pip install nbval
          pip install nbconvert
      - name: Execute notebook with resource monitoring
        env:
          NOTEBOOK: ${{ matrix.notebook }}
        run: |
          NB_CONVERT_PID=0
          monitor() {
            while sleep 5; do
              mem_usage=$(free | grep Mem | awk '{print $3/$2 * 100.0}')
              disk_usage=$(df / | tail -1 | awk '{print $5}' | tr -d '%')
              echo "Memory usage - $mem_usage"
              if [ "$mem_usage" -gt 60 ] || [ "$disk_usage" -gt 60 ]; then
                echo "Resource usage exceeded threshold (Mem: ${mem_usage}%, Disk: ${disk_usage}%). Killing nbconvert (PID: $NB_CONVERT_PID)"
                kill -9 $NB_CONVERT_PID || true
              fi
            done
          }
          monitor &
          MONITOR_PID=$!
          echo "Monitor started (PID: $MONITOR_PID)"
          
          python -m nbconvert --to notebook --execute "${{ matrix.notebooks }}" --output executed.ipynb &
          NB_CONVERT_PID=$!
          echo "Started nbconvert (PID: $NB_CONVERT_PID) for notebook: ${{ matrix.notebooks }}"
          
          wait $NB_CONVERT_PID
          RESULT=$?
          
          kill $MONITOR_PID || true

          echo "Exit result: $RESULT"
          exit $RESULT

  fallback-run:
    needs: run-notebook
    if: ${{ needs.run-notebook.outcome == 'failure' }}
    strategy:
        fail-fast: false
        matrix:
            notebooks: ${{ fromJson(needs.generate-matrix.outputs.matrix) }} 
    runs-on: jwst-pipeline-notebooks-16gb
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python ${{ inputs.python-version }} (Fallback)
        uses: actions/setup-python@v4
        with:
          python-version: ${{ inputs.python-version }}

      - name: Install dependencies
        run: |
          #pip install -r requirements.txt
          if [ -f $(dirname "${{ matrix.notebooks }}")/pre-requirements.sh ]; then
            chmod +x $(dirname "${{ matrix.notebooks }}")/pre-requirements.sh
            ./$(dirname "${{ matrix.notebooks }}")/pre-requirements.sh
          fi
          if [ -f $(dirname "${{ matrix.notebooks }}")/pre-requirements.txt ]; then
            pip install -r $(dirname "${{ matrix.notebooks }}")/pre-requirements.txt
          fi
          pip install -r $(dirname "${{ matrix.notebooks }}")/requirements.txt
          pip install pytest
          pip install nbval
          pip install nbconvert

      - name: Execute notebook with resource monitoring (Fallback)
        env:
          NOTEBOOK: ${{ matrix.notebook }}
        run: |
          NB_CONVERT_PID=0
          monitor() {
            while sleep 5; do
              mem_usage=$(free | awk '/^Mem/ {printf "%.0f", $3/$2 * 100}')
              disk_usage=$(df / | tail -1 | awk '{print $5}' | tr -d '%')
              if [ "$mem_usage" -gt 80 ] || [ "$disk_usage" -gt 80 ]; then
                echo "Resource usage exceeded threshold (Mem: ${mem_usage}%, Disk: ${disk_usage}%). Killing nbconvert (PID: $NB_CONVERT_PID)"
                kill -9 $NB_CONVERT_PID || true
              fi
            done
          }
          monitor &
          MONITOR_PID=$!
          echo "Monitor started (PID: $MONITOR_PID)"
          
          python -m nbconvert --to notebook --execute "${{ matrix.notebooks }}" --output executed.ipynb &
          NB_CONVERT_PID=$!
          echo "Started nbconvert (PID: $NB_CONVERT_PID) for notebook: ${{ matrix.notebooks }}"
          
          wait $NB_CONVERT_PID
          RESULT=$?
          
          kill $MONITOR_PID || true
          
          exit $RESULT

      - name: Archive executed notebook (Fallback)
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: executed-notebook-fallback-${{ matrix.notebook }}
          path: executed.ipynb
