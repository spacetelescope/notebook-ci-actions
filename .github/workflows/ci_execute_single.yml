name: Execute Single File w/os matrix
on:
  workflow_call:
    inputs:  
      python-version:
        required: true
        type: string
      filename:
        required: true
        type: string
    secrets:
      CASJOBS_USERID:
        description: 'CASJOBS user ID'
        required: false
      CASJOBS_PW:
        description: 'CASJOBS password'
        required: false

jobs:
  find_notebooks:
    runs-on: ubuntu-latest
    outputs:
      notebook_list: ${{ steps.find.outputs.notebook_list }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Find notebook files
      id: find
      run: |
        notebook_files=$(find notebooks -name ${{ inputs.filename }} | jq -R -s -c 'split("\n")[:-1]')
        #echo "::set-output name=notebook_list::$notebook_files"
        echo "notebook_list=$notebook_files" >>$GITHUB_OUTPUT

  tests:
    needs: find_notebooks
    runs-on: ubuntu-latest
    outputs:
      executed_notebooks: ${{ steps.execute.outputs.executed_notebooks }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, macos-12]
        notebook: ${{fromJson(needs.find_notebooks.outputs.notebook_list)}}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python ${{ inputs.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ inputs.python-version }}
        
    - name: Add conda to system path
      run: |
        # $CONDA is an environment variable pointing to the root of the miniconda directory
        echo $CONDA/bin >> $GITHUB_PATH
        
    - name: Install dependencies
      continue-on-error: true
      run: |
        export PYDEVD_DISABLE_FILE_VALIDATION=1
        export SKLEARN_ALLOW_DEPRECATED_SKLEARN_PACKAGE_INSTALL=True
        python -m pip install --upgrade pip
        pip install pytest
        pip install nbval
        pip install nbconvert
        echo "Path to req's: $(dirname ${{ matrix.notebook }})/requirements.txt"
        ls $(dirname ${{ matrix.notebook }})
        echo ---
        if [ -f $(dirname "${{ matrix.notebook }}")/pre-install.sh ]; then
          chmod +x $(dirname "${{ matrix.notebook }}")/pre-install.sh
          ./$(dirname "${{ matrix.notebook }}")/pre-install.sh
        fi
        if [ -f $(dirname "${{ matrix.notebook }}")/pre-requirements.sh ]; then
          chmod +x $(dirname "${{ matrix.notebook }}")/pre-requirements.sh
          ./$(dirname "${{ matrix.notebook }}")/pre-requirements.sh
          source /usr/share/miniconda/etc/profile.d/conda.sh
          conda init
          conda activate hstcal
        fi
        if [ -f pre-requirements.txt ]; then
          pip install -r pre-requirements.txt
        fi
        pip install -r $(dirname ${{ matrix.notebook }})/requirements.txt


    - name: Execute notebook
      id: execute
      run: |
        source /usr/share/miniconda/etc/profile.d/conda.sh
        conda init
        #conda activate # lets try just activating the base
        conda activate hstcal
        export CASJOBS_PW=${{ secrets.CASJOBS_PW }}
        export CASJOBS_USERID=${{ secrets.CASJOBS_USERID }}
        export PYDEVD_DISABLE_FILE_VALIDATION=1
        export SKLEARN_ALLOW_DEPRECATED_SKLEARN_PACKAGE_INSTALL=True
        jupyter nbconvert --to notebook --execute --inplace ${{ matrix.notebook }}
