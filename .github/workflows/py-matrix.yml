name: Matrix Python Notebook Execution
permissions:
  id-token: write
  
  
on:
  workflow_call:
    inputs:
      python-version:
        required: true
        type: string
    secrets:
      CASJOBS_USERID:
        description: 'CASJOBS user ID'
        required: false
      CASJOBS_PW:
        description: 'CASJOBS password'
        required: false
env:
  CASJOBS_PW: ${{ secrets.CASJOBS_PW }}
  CASJOBS_USERID: ${{ secrets.CASJOBS_USERID }}
  
 
jobs:
  gather-notebooks:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3
      - id: set-matrix
        run: echo "matrix=$(find notebooks -name "*.ipynb" | jq -cnR '[inputs | select(length>0)]')" >> $GITHUB_OUTPUT
  scheduled-notebook-execution:
    needs: gather-notebooks
    runs-on: ubuntu-latest
    strategy:
        fail-fast: false
        matrix:
            notebooks: ${{ fromJson(needs.gather-notebooks.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v3
      #- run: | 
      #      pip install -r ${${{ matrix.notebooks }}%/*}/requirements.txt
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4 ## needed for caching
        with:
          python-version: ${{inputs.python-version}}
          cache: 'pip'
      - name: Add conda to system path
        run: |
          # $CONDA is an environment variable pointing to the root of the miniconda directory
          echo $CONDA/bin >> $GITHUB_PATH
      - name: Install dependencies
        run: |
          echo "Path to req's: $(dirname ${{ matrix.notebooks }})/requirements.txt"
          ls $(dirname ${{ matrix.notebooks }})
          echo ---
          if [ -f $(dirname "${{ matrix.notebooks }}")/pre-requirements.sh ]; then
            chmod +x $(dirname "${{ matrix.notebooks }}")/pre-requirements.sh
            ./$(dirname "${{ matrix.notebooks }}")/pre-requirements.sh
          fi
          pip install -r $(dirname ${{ matrix.notebooks }})/requirements.txt
          pip install pytest
          pip install nbval
          pip install nbconvert
      - name: Execute notebooks
        run: |
          jupyter nbconvert --template classic --to html --TagRemovePreprocessor.enabled=True --TagRemovePreprocessor.remove_input_tags='["hide-cell"]' --execute "${{ matrix.notebooks }}"
      - name: Validate notebooks
        run: |
          pytest --nbval "${{ matrix.notebooks }}"
