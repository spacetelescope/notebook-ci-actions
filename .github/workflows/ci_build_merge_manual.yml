name: Manual Full Archive Execution/HTML Gen/Deply
on:
  workflow_call:
    inputs:  
      python-version:
        required: true
        type: string
    secrets:
      CASJOBS_USERID:
        description: 'CASJOBS user ID'
        required: false
      CASJOBS_PW:
        description: 'CASJOBS password'
        required: false
          
env:
  CASJOBS_PW: ${{ secrets.CASJOBS_PW }}
  CASJOBS_USERID: ${{ secrets.CASJOBS_USERID }}

jobs:
  find_notebooks:
    runs-on: ubuntu-latest
    outputs:
      notebook_list: ${{ steps.find.outputs.notebook_list }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Find notebook files
      id: find
      run: |
        notebook_files=$(find notebooks -name "*.ipynb" | jq -R -s -c 'split("\n")[:-1]')
        #echo "::set-output name=notebook_list::$notebook_files"
        echo "notebook_list=$notebook_files" >>$GITHUB_OUTPUT

  execute_notebooks:
    needs: find_notebooks
    runs-on: ubuntu-latest
    outputs:
      executed_notebooks: ${{ steps.execute.outputs.executed_notebooks }}
    strategy:
      fail-fast: false
      matrix:
        notebook: ${{fromJson(needs.find_notebooks.outputs.notebook_list)}}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python ${{ inputs.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ inputs.python-version }}
        
    - name: Install dependencies
      continue-on-error: true
      run: |
        export PYDEVD_DISABLE_FILE_VALIDATION=1
        export SKLEARN_ALLOW_DEPRECATED_SKLEARN_PACKAGE_INSTALL=True
        python -m pip install --upgrade pip
        pip install pytest
        pip install nbval
        pip install nbconvert
        echo "Path to req's: $(dirname ${{ matrix.notebook }})/requirements.txt"
        ls $(dirname ${{ matrix.notebook }})
        echo ---
        if [ -f $(dirname "${{ matrix.notebook }}")/pre-installl.sh ]; then
          chmod +x $(dirname "${{ matrix.notebook }}")/pre-install.sh
          ./$(dirname "${{ matrix.notebook }}")/pre-install.sh
        fi
        if [ -f $(dirname "${{ matrix.notebook }}")/pre-requirements.sh ]; then
          chmod +x $(dirname "${{ matrix.notebook }}")/pre-requirements.sh
          ./$(dirname "${{ matrix.notebook }}")/pre-requirements.sh
        fi
        if [ -f pre-requirements.txt ]; then
          pip install -r pre-requirements.txt
        fi
        pip install -r $(dirname ${{ matrix.notebook }})/requirements.txt


    - name: Execute notebook
      id: execute
      continue-on-error: true 
      run: |
        export PYDEVD_DISABLE_FILE_VALIDATION=1
        export SKLEARN_ALLOW_DEPRECATED_SKLEARN_PACKAGE_INSTALL=True
        if [ "${{ matrix.notebook }}" != "notebooks/preimaging/preimaging_01_mirage.ipynb" ]; then
          if ! jupyter nbconvert --to notebook --execute --inplace ${{ matrix.notebook }}; then
            python .github/scripts/insert_failure_message.py ${{ matrix.notebook }}
          fi
        fi
        
    - name: Archive executed notebooks
      id: archive
      run: |
        if [ "${{ matrix.notebook }}" != "notebooks/preimaging/preimaging_01_mirage.ipynb" ]; then
          git config pull.rebase false
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
    
          UNIQUE_BRANCH="storage-${{ github.run_id }}-${{ matrix.notebook }}"
          SANITIZED_BRANCH=$(echo $UNIQUE_BRANCH | sed 's/\//_/g')
    
          git checkout -b $SANITIZED_BRANCH
          git add ${{ matrix.notebook }}
          git commit -m "Added executed notebook ${{ matrix.notebook }}"
    
          git push origin $SANITIZED_BRANCH
        fi
        
    - name: Replace files in gh-storage
      needs: [archive]
      id: store
      runs-on: ubuntu-latest
        steps:
          - name: Checkout gh-storage branch
            uses: actions/checkout@v2
            with:
              ref: gh-storage
    
      - name: Set up Git config
        run: |
          git config pull.rebase false
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
    
      - name: Replace files with the executed notebooks
        run: |
          for branch in $(git branch -r | grep 'storage-' | sed 's/origin\///'); do
            echo "Replacing files in gh-storage with the ones from $branch"
            git fetch origin $branch
            git checkout $branch -- .
            git commit -m "Replaced files with the executed notebooks from $branch"
          done
  
      - name: Push changes to gh-storage
        run: |
          git push origin gh-storage --force
  
      - name: Delete unique branches
        run: |
          for branch in $(git branch -r | grep 'storage-' | sed 's/origin\///'); do
            git push origin --delete $branch
          done

  generate_html:
    needs: [store]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python ${{ inputs.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ inputs.python-version }}
        
    - name: Install dependencies
      run: |
        pip install jupyter-book

    - name: Build HTML
      run: |
        git fetch
        git checkout origin/gh-storage -- notebooks/
        jupyter-book build .
        

    # Push the book's HTML to github-pages
    - name: GitHub Pages action
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./_build/html
