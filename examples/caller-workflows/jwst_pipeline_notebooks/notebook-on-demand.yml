# On-demand workflow for jwst_pipeline_notebooks repository
# Copy this file to your repository's .github/workflows/ directory

name: Notebook CI - On Demand

on:
  workflow_dispatch:
    inputs:
      execution_mode:
        description: 'Execution mode'
        required: false
        default: 'cache_only'
        type: choice
        options:
          - cache_only
          - force_execute
          - collect_only
      notebook_pattern:
        description: 'Notebook pattern (e.g., "**/*NIRCam*" or "**/*MIRI*")'
        required: false
        default: ''
        type: string
      instrument_filter:
        description: 'Instrument filter (optional)'
        required: false
        default: ''
        type: choice
        options:
          - ''
          - 'NIRCam'
          - 'MIRI'
          - 'NIRSpec'
          - 'NIRISS'
          - 'FGS'
      pipeline_stage:
        description: 'Pipeline stage (optional)'
        required: false
        default: ''
        type: choice
        options:
          - ''
          - 'stage1'
          - 'stage2'
          - 'stage3'
      generate_docs:
        description: 'Generate documentation'
        required: false
        default: true
        type: boolean

jobs:
  notebook-ci:
    uses: spacetelescope/notebook-ci-actions/.github/workflows/notebook-ci-unified.yml@dev-actions-v2
    with:
      # Repository-specific configuration
      notebook_path: 'notebooks'
      python_version: '3.11'
      
      # On-demand execution settings
      execution_mode: ${{ inputs.execution_mode }}
      notebook_pattern: ${{ inputs.notebook_pattern || (inputs.instrument_filter && format('**/*{0}*', inputs.instrument_filter) || (inputs.pipeline_stage && format('**/*{0}*', inputs.pipeline_stage) || '')) }}
      
      # Environment settings (JWST pipeline requires conda)
      environment_file: 'requirements.txt'
      conda_environment_file: 'environment.yml'
      
      # Security and validation
      security_check: true
      notebook_validation: true
      
      # Documentation generation
      generate_docs: ${{ inputs.generate_docs }}
      docs_artifact: 'jwst-pipeline-on-demand-docs'
      
      # Artifact settings
      artifact_retention_days: 45
      
      # Performance settings (JWST pipeline can be very resource intensive)
      timeout_minutes: 180
      max_parallel: 1
      
      # JWST-specific settings
      collect_execution_stats: true
      archive_execution_results: true
      
    secrets: inherit
