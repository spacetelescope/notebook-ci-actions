name: Debug Runner Config JSON

on:
  workflow_dispatch:

jobs:
  setup-debug:
    runs-on: ubuntu-24.04
    outputs:
      runner-config: ${{ steps.debug.outputs.runner-config }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Debug Runner Config Generation
        id: debug
        run: |
          echo "üîç Testing custom runner config generation"
          
          # Simulate matrix notebooks (use example notebooks from ci_config.txt)
          MATRIX_NOTEBOOKS='["notebooks/NIRSPEC/MOS/JWPipeNB-NIRSpec-MOS.ipynb","notebooks/MIRI/LRS-slit/JWPipeNB-MIRI-LRS-slit.ipynb"]'
          echo "üìö Matrix notebooks: $MATRIX_NOTEBOOKS"
          
          # Check if ci_config.txt exists
          if [ -f "examples/ci_config.txt" ]; then
            echo "‚úÖ Found ci_config.txt"
            cat examples/ci_config.txt
          else
            echo "‚ùå ci_config.txt not found"
            ls -la examples/
          fi
          
          # Create runner config JSON manually
          RUNNER_CONFIG='{'
          FIRST_ENTRY=true
          
          echo "$MATRIX_NOTEBOOKS" | jq -r '.[]' > /tmp/matrix_notebooks.txt 2>/dev/null
          
          while IFS= read -r notebook; do
            if [ -n "$notebook" ]; then
              # Look up runner for this notebook in ci_config.txt
              if [ -f "examples/ci_config.txt" ]; then
                CUSTOM_RUNNER=$(grep "^${notebook}:" examples/ci_config.txt 2>/dev/null | cut -d':' -f2 | tr -d '[:space:]' || echo "")
              else
                CUSTOM_RUNNER=""
              fi
              
              if [ -n "$CUSTOM_RUNNER" ]; then
                echo "üéØ Found custom runner for $notebook: '$CUSTOM_RUNNER'"
                RUNNER="$CUSTOM_RUNNER"
              else
                echo "üîß No custom runner for $notebook, using default: ubuntu-latest"
                RUNNER="ubuntu-latest"
              fi
              
              # Build JSON entry for runner config
              if [ "$FIRST_ENTRY" = "true" ]; then
                RUNNER_CONFIG="${RUNNER_CONFIG}\"${notebook}\":\"${RUNNER}\""
                FIRST_ENTRY=false
              else
                RUNNER_CONFIG="${RUNNER_CONFIG},\"${notebook}\":\"${RUNNER}\""
              fi
            fi
          done < /tmp/matrix_notebooks.txt
          
          # Clean up and close JSON
          rm -f /tmp/matrix_notebooks.txt
          RUNNER_CONFIG="${RUNNER_CONFIG},\"default\":\"ubuntu-latest\"}"
          
          echo "‚úÖ Generated runner config: $RUNNER_CONFIG"
          echo "runner-config=$RUNNER_CONFIG" >> $GITHUB_OUTPUT
          
          # Test JSON parsing
          echo "$RUNNER_CONFIG" | jq '.'
          
  test-lookup:
    needs: setup-debug
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        notebook: ["notebooks/NIRSPEC/MOS/JWPipeNB-NIRSpec-MOS.ipynb","notebooks/MIRI/LRS-slit/JWPipeNB-MIRI-LRS-slit.ipynb"]
    steps:
      - name: Test Runner Lookup
        run: |
          echo "üîç Testing runner lookup for: ${{ matrix.notebook }}"
          echo "üìã Runner config JSON: ${{ needs.setup-debug.outputs.runner-config }}"
          
          LOOKUP_RESULT="${{ fromJson(needs.setup-debug.outputs.runner-config)[matrix.notebook] }}"
          echo "üéØ Lookup result: '$LOOKUP_RESULT'"
          
          # Test the conditional logic
          if [ "$LOOKUP_RESULT" != "ubuntu-latest" ] && [ -n "$LOOKUP_RESULT" ]; then
            echo "‚úÖ Would use custom runner: $LOOKUP_RESULT"
          else
            echo "üîß Would use default: ubuntu-24.04"
          fi
